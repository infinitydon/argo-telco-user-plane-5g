apiVersion: argoproj.io/v1alpha1
kind: Application
metadata: # kpt-merge: argocd/APP_NAME
  name: APP_NAME # kpt-set: ${argocd-app-name}
  namespace: argocd
  annotations:
    internal.kpt.dev/upstream-identifier: 'argoproj.io|Application|argocd|APP_NAME'
spec:
  project: default
  source:
    chart: free5gc-upf
    repoURL: ghcr.io/infinitydon
    targetRevision: CHART_VERSION # kpt-set: ${helm-chart-version}
    helm:
      releaseName: HELM_RELEASE_VERSION # kpt-set: ${helm-release-name}
      valuesObject:
        dnn: DNN # kpt-set: ${dnn}
        ueIPpool: UE_IP_POOL # kpt-set: ${ue-ip-pool}
        gnb:
          N3subnetCIDR: GNB_N3_SUBNET_CIDR # kpt-set: ${gnb-n3-subnet-cidr}
        smf:
          N4subnetCIDR: SMF_N4_SUBNET_CIDR # kpt-set: ${smf-n4-subnet-cidr}
        upf:
          n3:
            multusIP: UPF_MULTUS_N3_IP # kpt-set: ${upf-multus-n3-ip}
            multusNetworkMask: UPF_N3_NETMASK # kpt-set: ${upf-n3-netmask}
            routeGw: UPF_N3_ROUTE_GW # kpt-set: ${upf-n3-route-gw}
          n4:
            multusIP: UPF_MULTUS_N4_IP # kpt-set: ${upf-multus-n4-ip}
            multusNetworkMask: UPF_N4_NETMASK # kpt-set: ${upf-n4-netmask}
            routeGw: UPF_N4_ROUTE_GW # kpt-set: ${upf-n4-route-gw}
          n6:
            multusIP: UPF_MULTUS_N6_IP # kpt-set: ${upf-multus-n6-ip}
            multusNetworkMask: UPF_N6_NETMASK # kpt-set: ${upf-n6-netmask}
        multus:
          n3dev: MULTUS_N3_DEV # kpt-set: ${multus-n3-dev}
          n4dev: MULTUS_N4_DEV # kpt-set: ${multus-n4-dev}
          n6dev: MULTUS_N6_DEV # kpt-set: ${multus-n6-dev}
  destination:
    server: "https://kubernetes.default.svc"
    namespace: telco
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
    - CreateNamespace=true
    - Replace=true
    - ServerSideApply=true,Validate=false
